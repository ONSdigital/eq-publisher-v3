steps:
  - name: docker
    id: build_and_push_registry
    entrypoint: sh
    args: 
      - '-c'
      - |
        if [ $_ENV = "staging" ]; then
          docker build -t "eu.gcr.io/ons-eqbs-images/eq-publisher:$SHORT_SHA" .
          docker push "eu.gcr.io/ons-eqbs-images/eq-publisher:$SHORT_SHA"
        else
          echo "*************************************************************"
          echo "* Build not required                                        *"
          echo "*************************************************************"
        fi

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
    id: tag release
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        if [ $_ENV = "preprod" ]; then
          gcloud container images add-tag \
          eu.gcr.io/ons-eqbs-images/eq-publisher:$SHORT_SHA \
          eu.gcr.io/ons-eqbs-images/eq-publisher:$TAG_NAME
        else
          echo "*************************************************************"
          echo "* Tagging not required                                      *"
          echo "*************************************************************"
        fi

  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:alpine'
    id: deploy_publisher
    entrypoint: sh
    args:
      - '-c'
      - |
        if [ $_ENV = "staging" ]; then
          gcloud run deploy eq-publisher \
          --image "eu.gcr.io/ons-eqbs-images/eq-publisher:$SHORT_SHA" \
          --region europe-west2 \
          --platform managed
        else
          gcloud run deploy eq-publisher \
          --image "eu.gcr.io/ons-eqbs-images/eq-publisher:$TAG_NAME" \
          --region europe-west2 \
          --platform managed
        fi
