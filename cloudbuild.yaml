steps:
  - name: docker
    id: build_and_push
    entrypoint: sh
    args:
      - "-c"
      - |
        if [ $_ENV = "staging" ]; then
          docker build -t "$_EQ_PUBLISHER_IMAGE_REPO:$SHORT_SHA" .
          docker push "$_EQ_PUBLISHER_IMAGE_REPO:$SHORT_SHA"
        else
          echo "*************************************************************"
          echo "* Build not required                                        *"
          echo "*************************************************************"
        fi

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:alpine"
    id: tag release
    entrypoint: /bin/bash
    args:
      - "-c"
      - |
        if [ $_ENV = "preprod" ]; then
          gcloud container images add-tag \
          $_EQ_PUBLISHER_IMAGE_REPO:$SHORT_SHA \
          $_EQ_PUBLISHER_IMAGE_REPO:$TAG_NAME
        else
          echo "*************************************************************"
          echo "* Tagging not required                                      *"
          echo "*************************************************************"
        fi

  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk:alpine"
    id: deploy
    entrypoint: sh
    args:
      - "-c"
      - |
        if [ $_ENV = "staging" ]; then
          gcloud run deploy eq-publisher \
          --image "$_EQ_PUBLISHER_IMAGE_REPO:$SHORT_SHA" \
          --region europe-west2 \
          --platform managed
        else
          gcloud run deploy eq-publisher \
          --image "$_EQ_PUBLISHER_IMAGE_REPO:$TAG_NAME" \
          --region europe-west2 \
          --platform managed
        fi
